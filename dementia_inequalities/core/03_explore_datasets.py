# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/core/03a_explore_datasets.ipynb.

# %% auto 0
__all__ = ['lin_reg_analysis']

# %% ../../nbs/core/03a_explore_datasets.ipynb 4
import dementia_inequalities as proj
from .. import const, log, utils, tools
import adu_proj.utils as adutils

# %% ../../nbs/core/03a_explore_datasets.ipynb 5
import numpy as np 
import pandas as pd 
from matplotlib import pyplot as plt
from sklearn import linear_model

import statsmodels.api as sm 
from statsmodels.formula.api import ols
from statsmodels.stats.outliers_influence import variance_inflation_factor
from statsmodels.tools.tools import add_constant

# %% ../../nbs/core/03a_explore_datasets.ipynb 22
def lin_reg_analysis(x,
                     y,
                     var_name:str):
    
    x = x.values.reshape(-1,1)
    y = y.values.reshape(-1,1)

    regr = linear_model.LinearRegression()

    # fit regression
    regr.fit(x, y)
    y_pred = regr.predict(x)

    # residuals 
    resid = y-y_pred

    plt.subplots(nrows=2, ncols= 1, figsize = (6,10))

    plt.subplot(2, 1, 1)
    plt.scatter(x, y, color='plum')
    plt.plot(x, y_pred, color='yellowgreen')
    plt.title('Linear Regression Model')
    plt.xlabel(f'% population {var_name}')
    plt.ylabel('% population dementia')

    plt.subplot(2, 1, 2)
    plt.scatter(x, resid, color='darkseagreen')
    plt.plot(x, np.zeros(len(x)), ':', color='lightblue')
    plt.title('Model Residuals')
    plt.ylabel('Residuals')
    plt.xlabel(f'% population {var_name}')

    x_sm = sm.add_constant(x)
    model = sm.OLS(y, x_sm).fit()

    print(f'Intercept:{regr.intercept_[0]}')
    print(f'-------- \nCoefficient \n{var_name}:{regr.coef_[0][0]}')
    print(f'-------- \np-value\n{var_name}:{model.pvalues[1]}')
